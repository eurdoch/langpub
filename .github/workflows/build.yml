name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        include:
          - os: macos-latest
            mac-arch: x64
            mac-name: intel
          - os: macos-latest
            mac-arch: arm64
            mac-name: apple-silicon
        exclude:
          - os: macos-latest
            mac-arch: ''
            mac-name: ''

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 23.4.0
          cache: 'yarn'  # This enables caching for Yarn

      - name: Install Yarn
        run: npm install -g yarn

      - name: Install dependencies
        run: yarn install --frozen-lockfile  # This is Yarn's equivalent to npm ci

      - name: Build Vite app
        run: yarn build

      - name: Build Electron app
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ "${{ matrix.os }}" = "macos-latest" ]; then
            yarn electron:build --mac --arch=${{ matrix.mac-arch }}
          elif [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
            yarn electron:build --linux
          elif [ "${{ matrix.os }}" = "windows-latest" ]; then
            yarn electron:build --win
          fi
        shell: bash

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}${{ matrix.mac-name != '' && format('-{0}', matrix.mac-name) || '' }}
          path: dist_electron/*.{dmg,zip,exe,AppImage,deb}
          if-no-files-found: ignore

  publish:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/**/*
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
