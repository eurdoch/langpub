name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:  # Added manual trigger option

jobs:
  release:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            mac-arch: x64
            mac-name: intel
          - os: macos-latest
            mac-arch: arm64
            mac-name: apple-silicon
          - os: ubuntu-latest
          - os: windows-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3
      
      - name: Check for secret
        run: |
          if [ -z "${GH_TOKEN}" ]; then
            echo "GH_TOKEN is not set"
            exit 1
          else
            echo "GH_TOKEN is available"
          fi
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 23.4.0
          cache: 'yarn'

      - name: Install Yarn
        run: npm install -g yarn

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build Vite app
        run: yarn build

      - name: Build Electron app
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          if [[ "${{ matrix.os }}" == "macos-latest" && "${{ matrix.mac-arch }}" != "" ]]; then
            yarn electron:build --mac --arch=${{ matrix.mac-arch }}
          elif [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
            yarn electron:build --linux
          elif [ "${{ matrix.os }}" = "windows-latest" ]; then
            yarn electron:build --win
          fi
        shell: bash

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}${{ matrix.mac-name != '' && format('-{0}', matrix.mac-name) || '' }}
          path: release/*/*.{dmg,zip,exe,AppImage,deb}
          if-no-files-found: warn

  publish:
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: List downloaded artifacts
        run: find artifacts -type f | sort
        shell: bash

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/**/*
          draft: false
          prerelease: false
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
